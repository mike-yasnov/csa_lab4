{
  "return_code": 0,
  "stdout": "Загрузка программы: /tmp/tempfile/program.bin\nЗагружено 50 инструкций\nЗагрузка данных: /tmp/tempfile/program_data.bin\nЗагружено 136 байт данных\nЗапуск выполнения (максимум 1000000 тактов)...\n\n=== РЕЗУЛЬТАТЫ ВЫПОЛНЕНИЯ ===\nСостояние: halted\nВыполнено инструкций: 6\nЗатрачено тактов: 16\nФинальный PC: 5\n\nВЫВОД ПРОГРАММЫ:\n[208][148][208][181][208][188][208][190][208][189][209][129][209][130][209][128][208][176][209][134][208][184][209][143] [209][129][208][184][209][129][209][130][208][181][208][188][209][139] [208][191][209][128][208][181][209][128][209][139][208][178][208][176][208][189][208][184][208][185]\n\nПрограмма завершена успешно.\n",
  "stderr": "",
  "exec_log": "Cycle 000002: PC=0000 00(000000) Stack[0] TOS=empty\nCycle 000004: PC=0001 00(000000) Stack[1] TOS=0\nCycle 000008: PC=0002 51(000000) Stack[2] TOS=0\nCycle 000010: PC=0003 00(000004) Stack[0] TOS=empty\nCycle 000015: PC=0004 61(000001) Stack[1] TOS=4\nCycle 000016: PC=0005 01(000000) Stack[0] TOS=empty",
  "debug_listing": "INSTRUCTION MEMORY:\nAddress - Hex Code - Mnemonic\n----------------------------------------\n0000 - 00000000 - PUSH\n0002 - 00000000 - PUSH\n0004 - 51000000 - STORE\n0005 - 00040000 - PUSH 4\n0007 - 61010000 - OUT 1\n0009 - 01000000 - POP\n000A - 00000000 - PUSH\n000C - 00410000 - PUSH 65\n000E - 51000000 - STORE\n000F - 00410000 - PUSH 65\n0011 - 50000000 - LOAD\n0012 - 00640000 - PUSH 100\n0014 - 32000000 - LT\n0015 - 412B0000 - JZ 43\n0017 - 00410000 - PUSH 65\n0019 - 50000000 - LOAD\n001A - 00010000 - PUSH 1\n001C - 10000000 - ADD\n001D - 00410000 - PUSH 65\n001F - 51000000 - STORE\n0020 - 00410000 - PUSH 65\n0022 - 50000000 - LOAD\n0023 - 00140000 - PUSH 20\n0025 - 14000000 - MOD\n0026 - 00000000 - PUSH\n0028 - 30000000 - EQ\n0029 - 41220000 - JZ 34\n002B - 00450000 - PUSH 69\n002D - 61010000 - OUT 1\n002F - 01000000 - POP\n0030 - 00410000 - PUSH 65\n0032 - 50000000 - LOAD\n0033 - 61010000 - OUT 1\n0035 - 01000000 - POP\n0036 - 00410000 - PUSH 65\n0038 - 50000000 - LOAD\n0039 - 00020000 - PUSH 2\n003B - 12000000 - MUL\n003C - 00010000 - PUSH 1\n003E - 10000000 - ADD\n003F - 00590000 - PUSH 89\n0041 - 51000000 - STORE\n0042 - 40090000 - JMP 9\n0044 - 005D0000 - PUSH 93\n0046 - 61010000 - OUT 1\n0048 - 01000000 - POP\n0049 - 44000000 - RET\n004A - 43030000 - CALL 3\n004C - 01000000 - POP\n004D - 70000000 - HALT\n\nDATA MEMORY:\nAddress - Hex Dump - ASCII\n----------------------------------------\n0000 - 00 00 00 00 D0 94 D0 B5 D0 BC D0 BE D0 BD D1 81  - ................\n0010 - D1 82 D1 80 D0 B0 D1 86 D0 B8 D1 8F 20 D1 81 D0  - ............ ...\n0020 - B8 D1 81 D1 82 D0 B5 D0 BC D1 8B 20 D0 BF D1 80  - ........... ....\n0030 - D0 B5 D1 80 D1 8B D0 B2 D0 B0 D0 BD D0 B8 D0 B9  - ................\n0040 - 00 00 00 00 00 4D 61 69 6E 20 6C 6F 6F 70 3A 20  - .....Main loop: \n0050 - 63 6F 75 6E 74 65 72 3D 00 00 00 00 00 D0 9E D1  - counter=........\n0060 - 81 D0 BD D0 BE D0 B2 D0 BD D0 BE D0 B9 20 D1 86  - ............. ..\n0070 - D0 B8 D0 BA D0 BB 20 D0 B7 D0 B0 D0 B2 D0 B5 D1  - ...... .........\n0080 - 80 D1 88 D1 91 D0 BD 00                          - ........\n"
}