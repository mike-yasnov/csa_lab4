{
  "return_code": 0,
  "stdout": "Загрузка программы: /tmp/tempfile/program.bin\nЗагружено 119 инструкций\nЗагрузка данных: /tmp/tempfile/program_data.bin\nЗагружено 228 байт данных\nЗапуск выполнения (максимум 1000000 тактов)...\n\n=== РЕЗУЛЬТАТЫ ВЫПОЛНЕНИЯ ===\nСостояние: halted\nВыполнено инструкций: 3\nЗатрачено тактов: 8\nФинальный PC: 2\n\nВЫВОД ПРОГРАММЫ:\n[208][148][208][181][208][188][208][190][208][189][209][129][209][130][209][128][208][176][209][134][208][184][209][143] 64-[208][177][208][184][209][130][208][189][208][190][208][185] [208][176][209][128][208][184][209][132][208][188][208][181][209][130][208][184][208][186][208][184]:\n\nПрограмма завершена успешно.\n",
  "stderr": "",
  "exec_log": "Cycle 000002: PC=0000 00(000000) Stack[0] TOS=empty\nCycle 000007: PC=0001 61(000001) Stack[1] TOS=0\nCycle 000008: PC=0002 01(000000) Stack[0] TOS=empty",
  "debug_listing": "INSTRUCTION MEMORY:\nAddress - Hex Code - Mnemonic\n----------------------------------------\n0000 - 00000000 - PUSH\n0002 - 61010000 - OUT 1\n0004 - 01000000 - POP\n0005 - 00010000 - PUSH 1\n0007 - 003F0000 - PUSH 63\n0009 - 51000000 - STORE\n000A - 0040420F - PUSH 1000000\n000C - 00430000 - PUSH 67\n000E - 51000000 - STORE\n000F - 00020000 - PUSH 2\n0011 - 00470000 - PUSH 71\n0013 - 51000000 - STORE\n0014 - 00010000 - PUSH 1\n0016 - 004B0000 - PUSH 75\n0018 - 51000000 - STORE\n0019 - 004F0000 - PUSH 79\n001B - 61010000 - OUT 1\n001D - 01000000 - POP\n001E - 003F0000 - PUSH 63\n0020 - 50000000 - LOAD\n0021 - 61000000 - OUT\n0023 - 01000000 - POP\n0024 - 00630000 - PUSH 99\n0026 - 61010000 - OUT 1\n0028 - 01000000 - POP\n0029 - 00430000 - PUSH 67\n002B - 50000000 - LOAD\n002C - 61000000 - OUT\n002E - 01000000 - POP\n002F - 00690000 - PUSH 105\n0031 - 61010000 - OUT 1\n0033 - 01000000 - POP\n0034 - 00470000 - PUSH 71\n0036 - 50000000 - LOAD\n0037 - 61000000 - OUT\n0039 - 01000000 - POP\n003A - 00630000 - PUSH 99\n003C - 61010000 - OUT 1\n003E - 01000000 - POP\n003F - 004B0000 - PUSH 75\n0041 - 50000000 - LOAD\n0042 - 61000000 - OUT\n0044 - 01000000 - POP\n0045 - 00430000 - PUSH 67\n0047 - 50000000 - LOAD\n0048 - 004B0000 - PUSH 75\n004A - 50000000 - LOAD\n004B - 10000000 - ADD\n004C - 007D0000 - PUSH 125\n004E - 51000000 - STORE\n004F - 00000000 - PUSH\n0051 - 00810000 - PUSH 129\n0053 - 51000000 - STORE\n0054 - 007D0000 - PUSH 125\n0056 - 50000000 - LOAD\n0057 - 00430000 - PUSH 67\n0059 - 50000000 - LOAD\n005A - 32000000 - LT\n005B - 413E0000 - JZ 62\n005D - 00010000 - PUSH 1\n005F - 00810000 - PUSH 129\n0061 - 51000000 - STORE\n0062 - 003F0000 - PUSH 63\n0064 - 50000000 - LOAD\n0065 - 00470000 - PUSH 71\n0067 - 50000000 - LOAD\n0068 - 10000000 - ADD\n0069 - 00810000 - PUSH 129\n006B - 50000000 - LOAD\n006C - 10000000 - ADD\n006D - 00850000 - PUSH 133\n006F - 51000000 - STORE\n0070 - 00890000 - PUSH 137\n0072 - 61010000 - OUT 1\n0074 - 01000000 - POP\n0075 - 00850000 - PUSH 133\n0077 - 50000000 - LOAD\n0078 - 61000000 - OUT\n007A - 01000000 - POP\n007B - 00630000 - PUSH 99\n007D - 61010000 - OUT 1\n007F - 01000000 - POP\n0080 - 007D0000 - PUSH 125\n0082 - 50000000 - LOAD\n0083 - 61000000 - OUT\n0085 - 01000000 - POP\n0086 - 00430000 - PUSH 67\n0088 - 50000000 - LOAD\n0089 - 00030000 - PUSH 3\n008B - 12000000 - MUL\n008C - 00960000 - PUSH 150\n008E - 51000000 - STORE\n008F - 003F0000 - PUSH 63\n0091 - 50000000 - LOAD\n0092 - 00030000 - PUSH 3\n0094 - 12000000 - MUL\n0095 - 009A0000 - PUSH 154\n0097 - 51000000 - STORE\n0098 - 009E0000 - PUSH 158\n009A - 61010000 - OUT 1\n009C - 01000000 - POP\n009D - 009A0000 - PUSH 154\n009F - 50000000 - LOAD\n00A0 - 61000000 - OUT\n00A2 - 01000000 - POP\n00A3 - 00630000 - PUSH 99\n00A5 - 61010000 - OUT 1\n00A7 - 01000000 - POP\n00A8 - 00960000 - PUSH 150\n00AA - 50000000 - LOAD\n00AB - 61000000 - OUT\n00AD - 01000000 - POP\n00AE - 00AB0000 - PUSH 171\n00B0 - 61010000 - OUT 1\n00B2 - 01000000 - POP\n00B3 - 44000000 - RET\n00B4 - 43000000 - CALL\n00B6 - 01000000 - POP\n00B7 - 70000000 - HALT\n\nDATA MEMORY:\nAddress - Hex Dump - ASCII\n----------------------------------------\n0000 - D0 94 D0 B5 D0 BC D0 BE D0 BD D1 81 D1 82 D1 80  - ................\n0010 - D0 B0 D1 86 D0 B8 D1 8F 20 36 34 2D D0 B1 D0 B8  - ........ 64-....\n0020 - D1 82 D0 BD D0 BE D0 B9 20 D0 B0 D1 80 D0 B8 D1  - ........ .......\n0030 - 84 D0 BC D0 B5 D1 82 D0 B8 D0 BA D0 B8 3A 00 00  - .............:..\n0040 - 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 D0  - ................\n0050 - A7 D0 B8 D1 81 D0 BB D0 BE 20 41 3A 20 68 69 67  - ......... A: hig\n0060 - 68 3D 00 20 6C 6F 77 3D 00 D0 A7 D0 B8 D1 81 D0  - h=. low=........\n0070 - BB D0 BE 20 42 3A 20 68 69 67 68 3D 00 00 00 00  - ... B: high=....\n0080 - 00 00 00 00 00 00 00 00 00 41 20 2B 20 42 3A 20  - .........A + B: \n0090 - 68 69 67 68 3D 00 00 00 00 00 00 00 00 00 41 20  - high=.........A \n00A0 - 2A 20 33 3A 20 68 69 67 68 3D 00 36 34 2D D0 B1  - * 3: high=.64-..\n00B0 - D0 B8 D1 82 D0 BD D0 B0 D1 8F 20 D0 B0 D1 80 D0  - .......... .....\n00C0 - B8 D1 84 D0 BC D0 B5 D1 82 D0 B8 D0 BA D0 B0 20  - ............... \n00D0 - D0 B7 D0 B0 D0 B2 D0 B5 D1 80 D1 88 D0 B5 D0 BD  - ................\n00E0 - D0 B0 21 00                                      - ..!.\n"
}