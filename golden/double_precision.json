{
  "return_code": 0,
  "stdout": "Загрузка программы: /tmp/tempfile/program.bin\nЗагружено 101 инструкций\nЗагрузка данных: /tmp/tempfile/program_data.bin\nЗагружено 148 байт данных\nЗапуск выполнения (максимум 1000000 тактов)...\n\n=== РЕЗУЛЬТАТЫ ВЫПОЛНЕНИЯ ===\nСостояние: halted\nВыполнено инструкций: 98\nЗатрачено тактов: 313\nФинальный PC: 100\n\nВЫВОД ПРОГРАММЫ:\nDemo: 64-bit arithmeticNumber A: high=1 low=1000000Number B: high=2 low=1A + B: high=3 low=1000001A * 3: high=3 low=300000064-bit arithmetic done!\n\nПрограмма завершена успешно.\n",
  "stderr": "",
  "exec_log": "Cycle 000002: PC=0000 40(000063) Stack[0] TOS=empty\nCycle 000006: PC=0063 43(000001) Stack[0] TOS=empty\nCycle 000008: PC=0001 00(000000) Stack[0] TOS=empty\nCycle 000013: PC=0002 61(000001) Stack[1] TOS=0\nCycle 000015: PC=0003 00(000001) Stack[0] TOS=empty\nCycle 000017: PC=0004 00(000018) Stack[1] TOS=1\nCycle 000021: PC=0005 51(000000) Stack[2] TOS=24\nCycle 000023: PC=0006 00(0F4240) Stack[0] TOS=empty\nCycle 000025: PC=0007 00(00001C) Stack[1] TOS=1000000\nCycle 000029: PC=0008 51(000000) Stack[2] TOS=28\nCycle 000031: PC=0009 00(000002) Stack[0] TOS=empty\nCycle 000033: PC=000A 00(000020) Stack[1] TOS=2\nCycle 000037: PC=000B 51(000000) Stack[2] TOS=32\nCycle 000039: PC=000C 00(000001) Stack[0] TOS=empty\nCycle 000041: PC=000D 00(000024) Stack[1] TOS=1\nCycle 000045: PC=000E 51(000000) Stack[2] TOS=36\nCycle 000047: PC=000F 00(000028) Stack[0] TOS=empty\nCycle 000052: PC=0010 61(000001) Stack[1] TOS=40\nCycle 000054: PC=0011 00(000018) Stack[0] TOS=empty\nCycle 000058: PC=0012 50(000000) Stack[1] TOS=24\nCycle 000063: PC=0013 61(000000) Stack[1] TOS=1\nCycle 000065: PC=0014 00(000038) Stack[0] TOS=empty\nCycle 000070: PC=0015 61(000001) Stack[1] TOS=56\nCycle 000072: PC=0016 00(00001C) Stack[0] TOS=empty\nCycle 000076: PC=0017 50(000000) Stack[1] TOS=28\nCycle 000081: PC=0018 61(000000) Stack[1] TOS=1000000\nCycle 000083: PC=0019 00(00003E) Stack[0] TOS=empty\nCycle 000088: PC=001A 61(000001) Stack[1] TOS=62\nCycle 000090: PC=001B 00(000020) Stack[0] TOS=empty\nCycle 000094: PC=001C 50(000000) Stack[1] TOS=32\nCycle 000099: PC=001D 61(000000) Stack[1] TOS=2\nCycle 000101: PC=001E 00(000038) Stack[0] TOS=empty\nCycle 000106: PC=001F 61(000001) Stack[1] TOS=56\nCycle 000108: PC=0020 00(000024) Stack[0] TOS=empty\nCycle 000112: PC=0021 50(000000) Stack[1] TOS=36\nCycle 000117: PC=0022 61(000000) Stack[1] TOS=1\nCycle 000119: PC=0023 00(00001C) Stack[0] TOS=empty\nCycle 000123: PC=0024 50(000000) Stack[1] TOS=28\nCycle 000125: PC=0025 00(000024) Stack[1] TOS=1000000\nCycle 000129: PC=0026 50(000000) Stack[2] TOS=36\nCycle 000132: PC=0027 10(000000) Stack[2] TOS=1\nCycle 000134: PC=0028 00(00004E) Stack[1] TOS=1000001\nCycle 000138: PC=0029 51(000000) Stack[2] TOS=78\nCycle 000140: PC=002A 00(000000) Stack[0] TOS=empty\nCycle 000142: PC=002B 00(000052) Stack[1] TOS=0\nCycle 000146: PC=002C 51(000000) Stack[2] TOS=82\nCycle 000148: PC=002D 00(00004E) Stack[0] TOS=empty\nCycle 000152: PC=002E 50(000000) Stack[1] TOS=78\nCycle 000154: PC=002F 00(00001C) Stack[1] TOS=1000001\nCycle 000158: PC=0030 50(000000) Stack[2] TOS=28\nCycle 000161: PC=0031 32(000000) Stack[2] TOS=1000000\nCycle 000164: PC=0032 41(000036) Stack[1] TOS=0\nCycle 000166: PC=0036 00(000018) Stack[0] TOS=empty\nCycle 000170: PC=0037 50(000000) Stack[1] TOS=24\nCycle 000172: PC=0038 00(000020) Stack[1] TOS=1\nCycle 000176: PC=0039 50(000000) Stack[2] TOS=32\nCycle 000179: PC=003A 10(000000) Stack[2] TOS=2\nCycle 000181: PC=003B 00(000052) Stack[1] TOS=3\nCycle 000185: PC=003C 50(000000) Stack[2] TOS=82\nCycle 000188: PC=003D 10(000000) Stack[2] TOS=0\nCycle 000190: PC=003E 00(000056) Stack[1] TOS=3\nCycle 000194: PC=003F 51(000000) Stack[2] TOS=86\nCycle 000196: PC=0040 00(00005A) Stack[0] TOS=empty\nCycle 000201: PC=0041 61(000001) Stack[1] TOS=90\nCycle 000203: PC=0042 00(000056) Stack[0] TOS=empty\nCycle 000207: PC=0043 50(000000) Stack[1] TOS=86\nCycle 000212: PC=0044 61(000000) Stack[1] TOS=3\nCycle 000214: PC=0045 00(000038) Stack[0] TOS=empty\nCycle 000219: PC=0046 61(000001) Stack[1] TOS=56\nCycle 000221: PC=0047 00(00004E) Stack[0] TOS=empty\nCycle 000225: PC=0048 50(000000) Stack[1] TOS=78\nCycle 000230: PC=0049 61(000000) Stack[1] TOS=1000001\nCycle 000232: PC=004A 00(00001C) Stack[0] TOS=empty\nCycle 000236: PC=004B 50(000000) Stack[1] TOS=28\nCycle 000238: PC=004C 00(000003) Stack[1] TOS=1000000\nCycle 000242: PC=004D 12(000000) Stack[2] TOS=3\nCycle 000244: PC=004E 00(000067) Stack[1] TOS=3000000\nCycle 000248: PC=004F 51(000000) Stack[2] TOS=103\nCycle 000250: PC=0050 00(000018) Stack[0] TOS=empty\nCycle 000254: PC=0051 50(000000) Stack[1] TOS=24\nCycle 000256: PC=0052 00(000003) Stack[1] TOS=1\nCycle 000260: PC=0053 12(000000) Stack[2] TOS=3\nCycle 000262: PC=0054 00(00006B) Stack[1] TOS=3\nCycle 000266: PC=0055 51(000000) Stack[2] TOS=107\nCycle 000268: PC=0056 00(00006F) Stack[0] TOS=empty\nCycle 000273: PC=0057 61(000001) Stack[1] TOS=111\nCycle 000275: PC=0058 00(00006B) Stack[0] TOS=empty\nCycle 000279: PC=0059 50(000000) Stack[1] TOS=107\nCycle 000284: PC=005A 61(000000) Stack[1] TOS=3\nCycle 000286: PC=005B 00(000038) Stack[0] TOS=empty\nCycle 000291: PC=005C 61(000001) Stack[1] TOS=56\nCycle 000293: PC=005D 00(000067) Stack[0] TOS=empty\nCycle 000297: PC=005E 50(000000) Stack[1] TOS=103\nCycle 000302: PC=005F 61(000000) Stack[1] TOS=3000000\nCycle 000304: PC=0060 00(00007C) Stack[0] TOS=empty\nCycle 000309: PC=0061 61(000001) Stack[1] TOS=124\nCycle 000312: PC=0062 44(000000) Stack[0] TOS=empty\nCycle 000313: PC=0064 70(000000) Stack[0] TOS=empty",
  "debug_listing": "INSTRUCTION MEMORY:\nAddress - Hex Code - Mnemonic\n----------------------------------------\n0000 - 40630000 - JMP 99\n0002 - 00000000 - PUSH\n0004 - 61010000 - OUT 1\n0006 - 00010000 - PUSH 1\n0008 - 00180000 - PUSH 24\n000A - 51000000 - STORE\n000B - 0040420F - PUSH 1000000\n000D - 001C0000 - PUSH 28\n000F - 51000000 - STORE\n0010 - 00020000 - PUSH 2\n0012 - 00200000 - PUSH 32\n0014 - 51000000 - STORE\n0015 - 00010000 - PUSH 1\n0017 - 00240000 - PUSH 36\n0019 - 51000000 - STORE\n001A - 00280000 - PUSH 40\n001C - 61010000 - OUT 1\n001E - 00180000 - PUSH 24\n0020 - 50000000 - LOAD\n0021 - 61000000 - OUT\n0023 - 00380000 - PUSH 56\n0025 - 61010000 - OUT 1\n0027 - 001C0000 - PUSH 28\n0029 - 50000000 - LOAD\n002A - 61000000 - OUT\n002C - 003E0000 - PUSH 62\n002E - 61010000 - OUT 1\n0030 - 00200000 - PUSH 32\n0032 - 50000000 - LOAD\n0033 - 61000000 - OUT\n0035 - 00380000 - PUSH 56\n0037 - 61010000 - OUT 1\n0039 - 00240000 - PUSH 36\n003B - 50000000 - LOAD\n003C - 61000000 - OUT\n003E - 001C0000 - PUSH 28\n0040 - 50000000 - LOAD\n0041 - 00240000 - PUSH 36\n0043 - 50000000 - LOAD\n0044 - 10000000 - ADD\n0045 - 004E0000 - PUSH 78\n0047 - 51000000 - STORE\n0048 - 00000000 - PUSH\n004A - 00520000 - PUSH 82\n004C - 51000000 - STORE\n004D - 004E0000 - PUSH 78\n004F - 50000000 - LOAD\n0050 - 001C0000 - PUSH 28\n0052 - 50000000 - LOAD\n0053 - 32000000 - LT\n0054 - 41360000 - JZ 54\n0056 - 00010000 - PUSH 1\n0058 - 00520000 - PUSH 82\n005A - 51000000 - STORE\n005B - 00180000 - PUSH 24\n005D - 50000000 - LOAD\n005E - 00200000 - PUSH 32\n0060 - 50000000 - LOAD\n0061 - 10000000 - ADD\n0062 - 00520000 - PUSH 82\n0064 - 50000000 - LOAD\n0065 - 10000000 - ADD\n0066 - 00560000 - PUSH 86\n0068 - 51000000 - STORE\n0069 - 005A0000 - PUSH 90\n006B - 61010000 - OUT 1\n006D - 00560000 - PUSH 86\n006F - 50000000 - LOAD\n0070 - 61000000 - OUT\n0072 - 00380000 - PUSH 56\n0074 - 61010000 - OUT 1\n0076 - 004E0000 - PUSH 78\n0078 - 50000000 - LOAD\n0079 - 61000000 - OUT\n007B - 001C0000 - PUSH 28\n007D - 50000000 - LOAD\n007E - 00030000 - PUSH 3\n0080 - 12000000 - MUL\n0081 - 00670000 - PUSH 103\n0083 - 51000000 - STORE\n0084 - 00180000 - PUSH 24\n0086 - 50000000 - LOAD\n0087 - 00030000 - PUSH 3\n0089 - 12000000 - MUL\n008A - 006B0000 - PUSH 107\n008C - 51000000 - STORE\n008D - 006F0000 - PUSH 111\n008F - 61010000 - OUT 1\n0091 - 006B0000 - PUSH 107\n0093 - 50000000 - LOAD\n0094 - 61000000 - OUT\n0096 - 00380000 - PUSH 56\n0098 - 61010000 - OUT 1\n009A - 00670000 - PUSH 103\n009C - 50000000 - LOAD\n009D - 61000000 - OUT\n009F - 007C0000 - PUSH 124\n00A1 - 61010000 - OUT 1\n00A3 - 44000000 - RET\n00A4 - 43010000 - CALL 1\n00A6 - 70000000 - HALT\n\nDATA MEMORY:\nAddress - Hex Dump - ASCII\n----------------------------------------\n0000 - 44 65 6D 6F 3A 20 36 34 2D 62 69 74 20 61 72 69  - Demo: 64-bit ari\n0010 - 74 68 6D 65 74 69 63 00 00 00 00 00 00 00 00 00  - thmetic.........\n0020 - 00 00 00 00 00 00 00 00 4E 75 6D 62 65 72 20 41  - ........Number A\n0030 - 3A 20 68 69 67 68 3D 00 20 6C 6F 77 3D 00 4E 75  - : high=. low=.Nu\n0040 - 6D 62 65 72 20 42 3A 20 68 69 67 68 3D 00 00 00  - mber B: high=...\n0050 - 00 00 00 00 00 00 00 00 00 00 41 20 2B 20 42 3A  - ..........A + B:\n0060 - 20 68 69 67 68 3D 00 00 00 00 00 00 00 00 00 41  -  high=.........A\n0070 - 20 2A 20 33 3A 20 68 69 67 68 3D 00 36 34 2D 62  -  * 3: high=.64-b\n0080 - 69 74 20 61 72 69 74 68 6D 65 74 69 63 20 64 6F  - it arithmetic do\n0090 - 6E 65 21 00                                      - ne!.\n"
}