{
  "return_code": 0,
  "stdout": "Загрузка программы: /tmp/tempfile/program.bin\nЗагружено 87 инструкций\nЗагрузка данных: /tmp/tempfile/program_data.bin\nЗагружено 299 байт данных\nЗапуск выполнения (максимум 1000000 тактов)...\n\n=== РЕЗУЛЬТАТЫ ВЫПОЛНЕНИЯ ===\nСостояние: halted\nВыполнено инструкций: 3\nЗатрачено тактов: 8\nФинальный PC: 2\n\nВЫВОД ПРОГРАММЫ:\nEuler [208][183][208][176][208][180][208][176][209][135][208][176] 6:\n\nПрограмма завершена успешно.\n",
  "stderr": "",
  "exec_log": "Cycle 000002: PC=0000 00(000000) Stack[0] TOS=empty\nCycle 000007: PC=0001 61(000001) Stack[1] TOS=0\nCycle 000008: PC=0002 01(000000) Stack[0] TOS=empty",
  "debug_listing": "INSTRUCTION MEMORY:\nAddress - Hex Code - Mnemonic\n----------------------------------------\n0000 - 00000000 - PUSH\n0002 - 61010000 - OUT 1\n0004 - 01000000 - POP\n0005 - 00160000 - PUSH 22\n0007 - 61010000 - OUT 1\n0009 - 01000000 - POP\n000A - 00640000 - PUSH 100\n000C - 00800000 - PUSH 128\n000E - 51000000 - STORE\n000F - 00800000 - PUSH 128\n0011 - 50000000 - LOAD\n0012 - 00800000 - PUSH 128\n0014 - 50000000 - LOAD\n0015 - 00010000 - PUSH 1\n0017 - 10000000 - ADD\n0018 - 12000000 - MUL\n0019 - 00020000 - PUSH 2\n001B - 13000000 - DIV\n001C - 00840000 - PUSH 132\n001E - 51000000 - STORE\n001F - 00880000 - PUSH 136\n0021 - 61010000 - OUT 1\n0023 - 01000000 - POP\n0024 - 00840000 - PUSH 132\n0026 - 50000000 - LOAD\n0027 - 61000000 - OUT\n0029 - 01000000 - POP\n002A - 00840000 - PUSH 132\n002C - 50000000 - LOAD\n002D - 00840000 - PUSH 132\n002F - 50000000 - LOAD\n0030 - 12000000 - MUL\n0031 - 00B10000 - PUSH 177\n0033 - 51000000 - STORE\n0034 - 00B50000 - PUSH 181\n0036 - 61010000 - OUT 1\n0038 - 01000000 - POP\n0039 - 00B10000 - PUSH 177\n003B - 50000000 - LOAD\n003C - 61000000 - OUT\n003E - 01000000 - POP\n003F - 00800000 - PUSH 128\n0041 - 50000000 - LOAD\n0042 - 00800000 - PUSH 128\n0044 - 50000000 - LOAD\n0045 - 00010000 - PUSH 1\n0047 - 10000000 - ADD\n0048 - 12000000 - MUL\n0049 - 00020000 - PUSH 2\n004B - 00800000 - PUSH 128\n004D - 50000000 - LOAD\n004E - 12000000 - MUL\n004F - 00010000 - PUSH 1\n0051 - 10000000 - ADD\n0052 - 12000000 - MUL\n0053 - 00060000 - PUSH 6\n0055 - 13000000 - DIV\n0056 - 00D10000 - PUSH 209\n0058 - 51000000 - STORE\n0059 - 00D50000 - PUSH 213\n005B - 61010000 - OUT 1\n005D - 01000000 - POP\n005E - 00D10000 - PUSH 209\n0060 - 50000000 - LOAD\n0061 - 61000000 - OUT\n0063 - 01000000 - POP\n0064 - 00B10000 - PUSH 177\n0066 - 50000000 - LOAD\n0067 - 00D10000 - PUSH 209\n0069 - 50000000 - LOAD\n006A - 11000000 - SUB\n006B - 00F50000 - PUSH 245\n006D - 51000000 - STORE\n006E - 00F90000 - PUSH 249\n0070 - 61010000 - OUT 1\n0072 - 01000000 - POP\n0073 - 00F50000 - PUSH 245\n0075 - 50000000 - LOAD\n0076 - 61000000 - OUT\n0078 - 01000000 - POP\n0079 - 000C0100 - PUSH 268\n007B - 61010000 - OUT 1\n007D - 01000000 - POP\n007E - 44000000 - RET\n007F - 43000000 - CALL\n0081 - 01000000 - POP\n0082 - 70000000 - HALT\n\nDATA MEMORY:\nAddress - Hex Dump - ASCII\n----------------------------------------\n0000 - 45 75 6C 65 72 20 D0 B7 D0 B0 D0 B4 D0 B0 D1 87  - Euler ..........\n0010 - D0 B0 20 36 3A 00 D0 A0 D0 B0 D0 B7 D0 BD D0 BE  - .. 6:...........\n0020 - D1 81 D1 82 D1 8C 20 D0 BA D0 B2 D0 B0 D0 B4 D1  - ...... .........\n0030 - 80 D0 B0 D1 82 D0 B0 20 D1 81 D1 83 D0 BC D0 BC  - ....... ........\n0040 - D1 8B 20 D0 B8 20 D1 81 D1 83 D0 BC D0 BC D1 8B  - .. .. ..........\n0050 - 20 D0 BA D0 B2 D0 B0 D0 B4 D1 80 D0 B0 D1 82 D0  -  ...............\n0060 - BE D0 B2 20 D0 BF D0 B5 D1 80 D0 B2 D1 8B D1 85  - ... ............\n0070 - 20 31 30 30 20 D1 87 D0 B8 D1 81 D0 B5 D0 BB 00  -  100 ...........\n0080 - 00 00 00 00 00 00 00 00 D0 A1 D1 83 D0 BC D0 BC  - ................\n0090 - D0 B0 20 D0 BF D0 B5 D1 80 D0 B2 D1 8B D1 85 20  - .. ............ \n00A0 - 31 30 30 20 D1 87 D0 B8 D1 81 D0 B5 D0 BB 3A 20  - 100 ..........: \n00B0 - 00 00 00 00 00 D0 9A D0 B2 D0 B0 D0 B4 D1 80 D0  - ................\n00C0 - B0 D1 82 20 D1 81 D1 83 D0 BC D0 BC D1 8B 3A 20  - ... ..........: \n00D0 - 00 00 00 00 00 D0 A1 D1 83 D0 BC D0 BC D0 B0 20  - ............... \n00E0 - D0 BA D0 B2 D0 B0 D0 B4 D1 80 D0 B0 D1 82 D0 BE  - ................\n00F0 - D0 B2 3A 20 00 00 00 00 00 D0 A0 D0 B0 D0 B7 D0  - ..: ............\n0100 - BD D0 BE D1 81 D1 82 D1 8C 3A 20 00 D0 A0 D0 B5  - .........: .....\n0110 - D1 88 D0 B5 D0 BD D0 B8 D0 B5 20 D0 BD D0 B0 D0  - .......... .....\n0120 - B9 D0 B4 D0 B5 D0 BD D0 BE 21 00                 - .........!.\n"
}