{
  "return_code": 0,
  "stdout": "Загрузка программы: /tmp/tempfile/program.bin\nЗагружено 76 инструкций\nЗагрузка данных: /tmp/tempfile/program_data.bin\nЗагружено 182 байт данных\nЗапуск выполнения (максимум 1000000 тактов)...\n\n=== РЕЗУЛЬТАТЫ ВЫПОЛНЕНИЯ ===\nСостояние: halted\nВыполнено инструкций: 76\nЗатрачено тактов: 245\nФинальный PC: 75\n\nВЫВОД ПРОГРАММЫ:\nEuler Problem 6:Difference: square of sum vs sum of squares for first 100 numbersSum of first 100 numbers: 5050Square of sum: 25502500Sum of squares: 338350Difference: 25164150Done!\n\nПрограмма завершена успешно.\n",
  "stderr": "",
  "exec_log": "Cycle 000002: PC=0000 40(00004A) Stack[0] TOS=empty\nCycle 000006: PC=004A 43(000001) Stack[0] TOS=empty\nCycle 000008: PC=0001 00(000000) Stack[0] TOS=empty\nCycle 000013: PC=0002 61(000001) Stack[1] TOS=0\nCycle 000015: PC=0003 00(000011) Stack[0] TOS=empty\nCycle 000020: PC=0004 61(000001) Stack[1] TOS=17\nCycle 000022: PC=0005 00(000064) Stack[0] TOS=empty\nCycle 000024: PC=0006 00(000053) Stack[1] TOS=100\nCycle 000028: PC=0007 51(000000) Stack[2] TOS=83\nCycle 000030: PC=0008 00(000053) Stack[0] TOS=empty\nCycle 000034: PC=0009 50(000000) Stack[1] TOS=83\nCycle 000036: PC=000A 00(000053) Stack[1] TOS=100\nCycle 000040: PC=000B 50(000000) Stack[2] TOS=83\nCycle 000042: PC=000C 00(000001) Stack[2] TOS=100\nCycle 000045: PC=000D 10(000000) Stack[3] TOS=1\nCycle 000049: PC=000E 12(000000) Stack[2] TOS=101\nCycle 000051: PC=000F 00(000002) Stack[1] TOS=10100\nCycle 000057: PC=0010 13(000000) Stack[2] TOS=2\nCycle 000059: PC=0011 00(000057) Stack[1] TOS=5050\nCycle 000063: PC=0012 51(000000) Stack[2] TOS=87\nCycle 000065: PC=0013 00(00005B) Stack[0] TOS=empty\nCycle 000070: PC=0014 61(000001) Stack[1] TOS=91\nCycle 000072: PC=0015 00(000057) Stack[0] TOS=empty\nCycle 000076: PC=0016 50(000000) Stack[1] TOS=87\nCycle 000081: PC=0017 61(000000) Stack[1] TOS=5050\nCycle 000083: PC=0018 00(000057) Stack[0] TOS=empty\nCycle 000087: PC=0019 50(000000) Stack[1] TOS=87\nCycle 000089: PC=001A 00(000057) Stack[1] TOS=5050\nCycle 000093: PC=001B 50(000000) Stack[2] TOS=87\nCycle 000097: PC=001C 12(000000) Stack[2] TOS=5050\nCycle 000099: PC=001D 00(000076) Stack[1] TOS=25502500\nCycle 000103: PC=001E 51(000000) Stack[2] TOS=118\nCycle 000105: PC=001F 00(00007A) Stack[0] TOS=empty\nCycle 000110: PC=0020 61(000001) Stack[1] TOS=122\nCycle 000112: PC=0021 00(000076) Stack[0] TOS=empty\nCycle 000116: PC=0022 50(000000) Stack[1] TOS=118\nCycle 000121: PC=0023 61(000000) Stack[1] TOS=25502500\nCycle 000123: PC=0024 00(000053) Stack[0] TOS=empty\nCycle 000127: PC=0025 50(000000) Stack[1] TOS=83\nCycle 000129: PC=0026 00(000053) Stack[1] TOS=100\nCycle 000133: PC=0027 50(000000) Stack[2] TOS=83\nCycle 000135: PC=0028 00(000001) Stack[2] TOS=100\nCycle 000138: PC=0029 10(000000) Stack[3] TOS=1\nCycle 000142: PC=002A 12(000000) Stack[2] TOS=101\nCycle 000144: PC=002B 00(000002) Stack[1] TOS=10100\nCycle 000146: PC=002C 00(000053) Stack[2] TOS=2\nCycle 000150: PC=002D 50(000000) Stack[3] TOS=83\nCycle 000154: PC=002E 12(000000) Stack[3] TOS=100\nCycle 000156: PC=002F 00(000001) Stack[2] TOS=200\nCycle 000159: PC=0030 10(000000) Stack[3] TOS=1\nCycle 000163: PC=0031 12(000000) Stack[2] TOS=201\nCycle 000165: PC=0032 00(000006) Stack[1] TOS=2030100\nCycle 000171: PC=0033 13(000000) Stack[2] TOS=6\nCycle 000173: PC=0034 00(00008A) Stack[1] TOS=338350\nCycle 000177: PC=0035 51(000000) Stack[2] TOS=138\nCycle 000179: PC=0036 00(00008E) Stack[0] TOS=empty\nCycle 000184: PC=0037 61(000001) Stack[1] TOS=142\nCycle 000186: PC=0038 00(00008A) Stack[0] TOS=empty\nCycle 000190: PC=0039 50(000000) Stack[1] TOS=138\nCycle 000195: PC=003A 61(000000) Stack[1] TOS=338350\nCycle 000197: PC=003B 00(000076) Stack[0] TOS=empty\nCycle 000201: PC=003C 50(000000) Stack[1] TOS=118\nCycle 000203: PC=003D 00(00008A) Stack[1] TOS=25502500\nCycle 000207: PC=003E 50(000000) Stack[2] TOS=138\nCycle 000210: PC=003F 11(000000) Stack[2] TOS=338350\nCycle 000212: PC=0040 00(00009F) Stack[1] TOS=25164150\nCycle 000216: PC=0041 51(000000) Stack[2] TOS=159\nCycle 000218: PC=0042 00(0000A3) Stack[0] TOS=empty\nCycle 000223: PC=0043 61(000001) Stack[1] TOS=163\nCycle 000225: PC=0044 00(00009F) Stack[0] TOS=empty\nCycle 000229: PC=0045 50(000000) Stack[1] TOS=159\nCycle 000234: PC=0046 61(000000) Stack[1] TOS=25164150\nCycle 000236: PC=0047 00(0000B0) Stack[0] TOS=empty\nCycle 000241: PC=0048 61(000001) Stack[1] TOS=176\nCycle 000244: PC=0049 44(000000) Stack[0] TOS=empty\nCycle 000245: PC=004B 70(000000) Stack[0] TOS=empty",
  "debug_listing": "INSTRUCTION MEMORY:\nAddress - Hex Code - Mnemonic\n----------------------------------------\n0000 - 404A0000 - JMP 74\n0002 - 00000000 - PUSH\n0004 - 61010000 - OUT 1\n0006 - 00110000 - PUSH 17\n0008 - 61010000 - OUT 1\n000A - 00640000 - PUSH 100\n000C - 00530000 - PUSH 83\n000E - 51000000 - STORE\n000F - 00530000 - PUSH 83\n0011 - 50000000 - LOAD\n0012 - 00530000 - PUSH 83\n0014 - 50000000 - LOAD\n0015 - 00010000 - PUSH 1\n0017 - 10000000 - ADD\n0018 - 12000000 - MUL\n0019 - 00020000 - PUSH 2\n001B - 13000000 - DIV\n001C - 00570000 - PUSH 87\n001E - 51000000 - STORE\n001F - 005B0000 - PUSH 91\n0021 - 61010000 - OUT 1\n0023 - 00570000 - PUSH 87\n0025 - 50000000 - LOAD\n0026 - 61000000 - OUT\n0028 - 00570000 - PUSH 87\n002A - 50000000 - LOAD\n002B - 00570000 - PUSH 87\n002D - 50000000 - LOAD\n002E - 12000000 - MUL\n002F - 00760000 - PUSH 118\n0031 - 51000000 - STORE\n0032 - 007A0000 - PUSH 122\n0034 - 61010000 - OUT 1\n0036 - 00760000 - PUSH 118\n0038 - 50000000 - LOAD\n0039 - 61000000 - OUT\n003B - 00530000 - PUSH 83\n003D - 50000000 - LOAD\n003E - 00530000 - PUSH 83\n0040 - 50000000 - LOAD\n0041 - 00010000 - PUSH 1\n0043 - 10000000 - ADD\n0044 - 12000000 - MUL\n0045 - 00020000 - PUSH 2\n0047 - 00530000 - PUSH 83\n0049 - 50000000 - LOAD\n004A - 12000000 - MUL\n004B - 00010000 - PUSH 1\n004D - 10000000 - ADD\n004E - 12000000 - MUL\n004F - 00060000 - PUSH 6\n0051 - 13000000 - DIV\n0052 - 008A0000 - PUSH 138\n0054 - 51000000 - STORE\n0055 - 008E0000 - PUSH 142\n0057 - 61010000 - OUT 1\n0059 - 008A0000 - PUSH 138\n005B - 50000000 - LOAD\n005C - 61000000 - OUT\n005E - 00760000 - PUSH 118\n0060 - 50000000 - LOAD\n0061 - 008A0000 - PUSH 138\n0063 - 50000000 - LOAD\n0064 - 11000000 - SUB\n0065 - 009F0000 - PUSH 159\n0067 - 51000000 - STORE\n0068 - 00A30000 - PUSH 163\n006A - 61010000 - OUT 1\n006C - 009F0000 - PUSH 159\n006E - 50000000 - LOAD\n006F - 61000000 - OUT\n0071 - 00B00000 - PUSH 176\n0073 - 61010000 - OUT 1\n0075 - 44000000 - RET\n0076 - 43010000 - CALL 1\n0078 - 70000000 - HALT\n\nDATA MEMORY:\nAddress - Hex Dump - ASCII\n----------------------------------------\n0000 - 45 75 6C 65 72 20 50 72 6F 62 6C 65 6D 20 36 3A  - Euler Problem 6:\n0010 - 00 44 69 66 66 65 72 65 6E 63 65 3A 20 73 71 75  - .Difference: squ\n0020 - 61 72 65 20 6F 66 20 73 75 6D 20 76 73 20 73 75  - are of sum vs su\n0030 - 6D 20 6F 66 20 73 71 75 61 72 65 73 20 66 6F 72  - m of squares for\n0040 - 20 66 69 72 73 74 20 31 30 30 20 6E 75 6D 62 65  -  first 100 numbe\n0050 - 72 73 00 00 00 00 00 00 00 00 00 53 75 6D 20 6F  - rs.........Sum o\n0060 - 66 20 66 69 72 73 74 20 31 30 30 20 6E 75 6D 62  - f first 100 numb\n0070 - 65 72 73 3A 20 00 00 00 00 00 53 71 75 61 72 65  - ers: .....Square\n0080 - 20 6F 66 20 73 75 6D 3A 20 00 00 00 00 00 53 75  -  of sum: .....Su\n0090 - 6D 20 6F 66 20 73 71 75 61 72 65 73 3A 20 00 00  - m of squares: ..\n00A0 - 00 00 00 44 69 66 66 65 72 65 6E 63 65 3A 20 00  - ...Difference: .\n00B0 - 44 6F 6E 65 21 00                                - Done!.\n"
}