{
  "return_code": 0,
  "stdout": "Загрузка программы: /tmp/tempfile/program.bin\nЗагружено 91 инструкций\nЗагрузка данных: /tmp/tempfile/program_data.bin\nЗагружено 78 байт данных\nЗапуск выполнения (максимум 1000000 тактов)...\n\n=== РЕЗУЛЬТАТЫ ВЫПОЛНЕНИЯ ===\nСостояние: halted\nВыполнено инструкций: 79\nЗатрачено тактов: 247\nФинальный PC: 90\n\nВЫВОД ПРОГРАММЫ:\nSorting three numbers:Before sorting:301020After sorting:102030\n\nПрограмма завершена успешно.\n",
  "stderr": "",
  "exec_log": "Cycle 000002: PC=0000 40(000059) Stack[0] TOS=empty\nCycle 000006: PC=0059 43(000001) Stack[0] TOS=empty\nCycle 000008: PC=0001 00(000000) Stack[0] TOS=empty\nCycle 000013: PC=0002 61(000001) Stack[1] TOS=0\nCycle 000015: PC=0003 00(00001E) Stack[0] TOS=empty\nCycle 000017: PC=0004 00(000017) Stack[1] TOS=30\nCycle 000021: PC=0005 51(000000) Stack[2] TOS=23\nCycle 000023: PC=0006 00(00000A) Stack[0] TOS=empty\nCycle 000025: PC=0007 00(00001B) Stack[1] TOS=10\nCycle 000029: PC=0008 51(000000) Stack[2] TOS=27\nCycle 000031: PC=0009 00(000014) Stack[0] TOS=empty\nCycle 000033: PC=000A 00(00001F) Stack[1] TOS=20\nCycle 000037: PC=000B 51(000000) Stack[2] TOS=31\nCycle 000039: PC=000C 00(000023) Stack[0] TOS=empty\nCycle 000044: PC=000D 61(000001) Stack[1] TOS=35\nCycle 000046: PC=000E 00(000017) Stack[0] TOS=empty\nCycle 000050: PC=000F 50(000000) Stack[1] TOS=23\nCycle 000055: PC=0010 61(000000) Stack[1] TOS=30\nCycle 000057: PC=0011 00(00001B) Stack[0] TOS=empty\nCycle 000061: PC=0012 50(000000) Stack[1] TOS=27\nCycle 000066: PC=0013 61(000000) Stack[1] TOS=10\nCycle 000068: PC=0014 00(00001F) Stack[0] TOS=empty\nCycle 000072: PC=0015 50(000000) Stack[1] TOS=31\nCycle 000077: PC=0016 61(000000) Stack[1] TOS=20\nCycle 000079: PC=0017 00(000017) Stack[0] TOS=empty\nCycle 000083: PC=0018 50(000000) Stack[1] TOS=23\nCycle 000085: PC=0019 00(00001B) Stack[1] TOS=30\nCycle 000089: PC=001A 50(000000) Stack[2] TOS=27\nCycle 000092: PC=001B 34(000000) Stack[2] TOS=10\nCycle 000095: PC=001C 41(000029) Stack[1] TOS=1\nCycle 000097: PC=001D 00(000017) Stack[0] TOS=empty\nCycle 000101: PC=001E 50(000000) Stack[1] TOS=23\nCycle 000103: PC=001F 00(000033) Stack[1] TOS=30\nCycle 000107: PC=0020 51(000000) Stack[2] TOS=51\nCycle 000109: PC=0021 00(00001B) Stack[0] TOS=empty\nCycle 000113: PC=0022 50(000000) Stack[1] TOS=27\nCycle 000115: PC=0023 00(000017) Stack[1] TOS=10\nCycle 000119: PC=0024 51(000000) Stack[2] TOS=23\nCycle 000121: PC=0025 00(000033) Stack[0] TOS=empty\nCycle 000125: PC=0026 50(000000) Stack[1] TOS=51\nCycle 000127: PC=0027 00(00001B) Stack[1] TOS=30\nCycle 000131: PC=0028 51(000000) Stack[2] TOS=27\nCycle 000133: PC=0029 00(00001B) Stack[0] TOS=empty\nCycle 000137: PC=002A 50(000000) Stack[1] TOS=27\nCycle 000139: PC=002B 00(00001F) Stack[1] TOS=30\nCycle 000143: PC=002C 50(000000) Stack[2] TOS=31\nCycle 000146: PC=002D 34(000000) Stack[2] TOS=20\nCycle 000149: PC=002E 41(00003B) Stack[1] TOS=1\nCycle 000151: PC=002F 00(00001B) Stack[0] TOS=empty\nCycle 000155: PC=0030 50(000000) Stack[1] TOS=27\nCycle 000157: PC=0031 00(000037) Stack[1] TOS=30\nCycle 000161: PC=0032 51(000000) Stack[2] TOS=55\nCycle 000163: PC=0033 00(00001F) Stack[0] TOS=empty\nCycle 000167: PC=0034 50(000000) Stack[1] TOS=31\nCycle 000169: PC=0035 00(00001B) Stack[1] TOS=20\nCycle 000173: PC=0036 51(000000) Stack[2] TOS=27\nCycle 000175: PC=0037 00(000037) Stack[0] TOS=empty\nCycle 000179: PC=0038 50(000000) Stack[1] TOS=55\nCycle 000181: PC=0039 00(00001F) Stack[1] TOS=30\nCycle 000185: PC=003A 51(000000) Stack[2] TOS=31\nCycle 000187: PC=003B 00(000017) Stack[0] TOS=empty\nCycle 000191: PC=003C 50(000000) Stack[1] TOS=23\nCycle 000193: PC=003D 00(00001B) Stack[1] TOS=10\nCycle 000197: PC=003E 50(000000) Stack[2] TOS=27\nCycle 000200: PC=003F 34(000000) Stack[2] TOS=20\nCycle 000203: PC=0040 41(00004D) Stack[1] TOS=0\nCycle 000205: PC=004D 00(00003F) Stack[0] TOS=empty\nCycle 000210: PC=004E 61(000001) Stack[1] TOS=63\nCycle 000212: PC=004F 00(000017) Stack[0] TOS=empty\nCycle 000216: PC=0050 50(000000) Stack[1] TOS=23\nCycle 000221: PC=0051 61(000000) Stack[1] TOS=10\nCycle 000223: PC=0052 00(00001B) Stack[0] TOS=empty\nCycle 000227: PC=0053 50(000000) Stack[1] TOS=27\nCycle 000232: PC=0054 61(000000) Stack[1] TOS=20\nCycle 000234: PC=0055 00(00001F) Stack[0] TOS=empty\nCycle 000238: PC=0056 50(000000) Stack[1] TOS=31\nCycle 000243: PC=0057 61(000000) Stack[1] TOS=30\nCycle 000246: PC=0058 44(000000) Stack[0] TOS=empty\nCycle 000247: PC=005A 70(000000) Stack[0] TOS=empty",
  "debug_listing": "INSTRUCTION MEMORY:\nAddress - Hex Code - Mnemonic\n----------------------------------------\n0000 - 40590000 - JMP 89\n0002 - 00000000 - PUSH\n0004 - 61010000 - OUT 1\n0006 - 001E0000 - PUSH 30\n0008 - 00170000 - PUSH 23\n000A - 51000000 - STORE\n000B - 000A0000 - PUSH 10\n000D - 001B0000 - PUSH 27\n000F - 51000000 - STORE\n0010 - 00140000 - PUSH 20\n0012 - 001F0000 - PUSH 31\n0014 - 51000000 - STORE\n0015 - 00230000 - PUSH 35\n0017 - 61010000 - OUT 1\n0019 - 00170000 - PUSH 23\n001B - 50000000 - LOAD\n001C - 61000000 - OUT\n001E - 001B0000 - PUSH 27\n0020 - 50000000 - LOAD\n0021 - 61000000 - OUT\n0023 - 001F0000 - PUSH 31\n0025 - 50000000 - LOAD\n0026 - 61000000 - OUT\n0028 - 00170000 - PUSH 23\n002A - 50000000 - LOAD\n002B - 001B0000 - PUSH 27\n002D - 50000000 - LOAD\n002E - 34000000 - GT\n002F - 41290000 - JZ 41\n0031 - 00170000 - PUSH 23\n0033 - 50000000 - LOAD\n0034 - 00330000 - PUSH 51\n0036 - 51000000 - STORE\n0037 - 001B0000 - PUSH 27\n0039 - 50000000 - LOAD\n003A - 00170000 - PUSH 23\n003C - 51000000 - STORE\n003D - 00330000 - PUSH 51\n003F - 50000000 - LOAD\n0040 - 001B0000 - PUSH 27\n0042 - 51000000 - STORE\n0043 - 001B0000 - PUSH 27\n0045 - 50000000 - LOAD\n0046 - 001F0000 - PUSH 31\n0048 - 50000000 - LOAD\n0049 - 34000000 - GT\n004A - 413B0000 - JZ 59\n004C - 001B0000 - PUSH 27\n004E - 50000000 - LOAD\n004F - 00370000 - PUSH 55\n0051 - 51000000 - STORE\n0052 - 001F0000 - PUSH 31\n0054 - 50000000 - LOAD\n0055 - 001B0000 - PUSH 27\n0057 - 51000000 - STORE\n0058 - 00370000 - PUSH 55\n005A - 50000000 - LOAD\n005B - 001F0000 - PUSH 31\n005D - 51000000 - STORE\n005E - 00170000 - PUSH 23\n0060 - 50000000 - LOAD\n0061 - 001B0000 - PUSH 27\n0063 - 50000000 - LOAD\n0064 - 34000000 - GT\n0065 - 414D0000 - JZ 77\n0067 - 00170000 - PUSH 23\n0069 - 50000000 - LOAD\n006A - 003B0000 - PUSH 59\n006C - 51000000 - STORE\n006D - 001B0000 - PUSH 27\n006F - 50000000 - LOAD\n0070 - 00170000 - PUSH 23\n0072 - 51000000 - STORE\n0073 - 003B0000 - PUSH 59\n0075 - 50000000 - LOAD\n0076 - 001B0000 - PUSH 27\n0078 - 51000000 - STORE\n0079 - 003F0000 - PUSH 63\n007B - 61010000 - OUT 1\n007D - 00170000 - PUSH 23\n007F - 50000000 - LOAD\n0080 - 61000000 - OUT\n0082 - 001B0000 - PUSH 27\n0084 - 50000000 - LOAD\n0085 - 61000000 - OUT\n0087 - 001F0000 - PUSH 31\n0089 - 50000000 - LOAD\n008A - 61000000 - OUT\n008C - 44000000 - RET\n008D - 43010000 - CALL 1\n008F - 70000000 - HALT\n\nDATA MEMORY:\nAddress - Hex Dump - ASCII\n----------------------------------------\n0000 - 53 6F 72 74 69 6E 67 20 74 68 72 65 65 20 6E 75  - Sorting three nu\n0010 - 6D 62 65 72 73 3A 00 00 00 00 00 00 00 00 00 00  - mbers:..........\n0020 - 00 00 00 42 65 66 6F 72 65 20 73 6F 72 74 69 6E  - ...Before sortin\n0030 - 67 3A 00 00 00 00 00 00 00 00 00 00 00 00 00 41  - g:.............A\n0040 - 66 74 65 72 20 73 6F 72 74 69 6E 67 3A 00        - fter sorting:.\n"
}